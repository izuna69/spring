<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bbsMapper">

    <!-- 게시글 정보를 Java 객체(BbsDto)로 매핑하기 위한 설정 -->
    <resultMap id="bbsResultMap" type="com.example.spring.bbs.BbsDto">
        <result property="id" column="ID" />
        <result property="title" column="TITLE" />
        <result property="content" column="CONTENT" />
        <result property="username" column="USERNAME" />
        <result property="password" column="PASSWORD" />
        <result property="createdAt" column="CREATED_AT" />
        <result property="updatedAt" column="UPDATED_AT" />
    </resultMap>

    <!-- 게시글 목록 조회 -->
    <select id="list" resultMap="bbsResultMap">
        <![CDATA[
        SELECT
            ID,
            TITLE,
            CONTENT,
            USERNAME,
            PASSWORD,
            CREATED_AT,
            UPDATED_AT
        FROM
            bbs
        ORDER BY
            ID DESC
        ]]>
    </select>

    <!--
        게시글 등록
        - useGeneratedKeys="true": DB에서 생성된 PK 값을 자동으로 가져옴
        - keyProperty="id": 생성된 ID를 BbsDto의 id 필드에 자동 저장
    -->
    <insert id="create" parameterType="com.example.spring.bbs.BbsDto" useGeneratedKeys="true"
        keyProperty="id">
        <![CDATA[
        INSERT INTO bbs (
            TITLE,
            CONTENT,
            USERNAME,
            PASSWORD
        ) VALUES (
            #{title},
            #{content},
            #{username},
            #{password}
        )
        ]]>
    </insert>

    <!--
        게시글 단건 조회
        - ID를 기준으로 조회
        - LIMIT 1: 1건만 반환
    -->
    <select id="read" resultMap="bbsResultMap">
        <![CDATA[
        SELECT
            ID,
            TITLE,
            CONTENT,
            USERNAME,
            PASSWORD,
            CREATED_AT,
            UPDATED_AT
        FROM
            bbs
        WHERE
            ID = #{id}
        LIMIT 1
        ]]>
    </select>

    <!--
        게시글 수정 쿼리
        - ID(PK)를 기준으로 게시글 정보를 수정함
        - parameterType: 수정할 게시글 정보를 담은 BbsDto 객체를 전달받음
        - LIMIT 1: 실수로 다수의 행이 수정되는 것을 방지 (MySQL에서 권장)
    -->
    <update id="update" parameterType="com.example.spring.bbs.BbsDto">
        <![CDATA[
        UPDATE
            bbs
        SET
            TITLE = #{title},         -- 게시글 제목 수정
            CONTENT = #{content},     -- 게시글 내용 수정
            USERNAME = #{username},   -- 작성자명 수정 (선택적)
            PASSWORD = #{password}    -- 비밀번호도 수정 가능
        WHERE
            ID = #{id}                -- 수정할 게시글의 고유 ID
        LIMIT 1
        ]]>
    </update>

    <!--
        게시글 삭제 쿼리
        - ID를 기준으로 게시글 1건을 삭제함
        - #{id}: 전달받은 게시글 ID 값
        - LIMIT 1: 실수로 여러 행이 삭제되는 것을 방지하기 위한 안전장치 (MySQL에서 유효)
    -->
    <delete id="delete">
        <![CDATA[
        DELETE FROM bbs
        WHERE ID = #{id}
        LIMIT 1
        ]]>
    </delete>


</mapper>